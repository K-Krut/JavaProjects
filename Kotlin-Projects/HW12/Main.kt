/**
 * Написати програму, що зчитує з клавіатури стрічку і повертає (кожен пункт оформити у вигляді методу)
 * кількість слів (в слові можуть зустрічатися:
 *      тільки літери;
 *      тільки символи;
 *      літери+символи+цифри;
 *      літери+символи;
 *      літери+цифри;
 *      символи(окрім крапки та коми)+цифри;
 * якщо відділені пропусками символи цифри, або цифри та кома чи крапка, то даний ланцюжок є числом)
 * кількість чисел
 * стрічку в якій прибрані усі символи крім літер
 * стрічку в якій множинні проміжки перетворені в один проміжок ("А   пр" ="А пр")
 * стрічку яка містить лише слова, що починаються з великої літери ("А   пр" ="А")
 */

/**
 * Головна функція програми
 * Відбувається зчитування рядка від користувача та виконання всіх,
 * передбачених в завданні, операцій з ним.
 */
fun main() {
    println("Enter str:")
    val str = readLine() ?: return
    val words = findWords(str)
    val numbers = findNumbers(str)

    println("${words.size} слів: ${words.joinToString()}")
    println("${numbers.size} чисел: ${numbers.joinToString()}")
    println("Лише букви: ${replaceNonLetters(str)}")
    println("Без лишніх пробілів: ${replaceWhiteSpaces(str)}")
    println("Слова з великої літери: ${words.filter { it.startsWithCapital() }.joinToString(" ")}")
}

/**
 * Функція для знаходження чисел в рядку.
 * Використовує регулярний вираз "^[+|-]?[0-9]*[.|,]?[0-9]*(e[+|-][0-9]*)?$" для визначення та метод matches()
 * @param str - рядок для аналізу
 * @return список чисел, знайдених у рядку
 */
fun findNumbers(str: String): List<String> {
    return str.split("\\s+".toRegex()).filter { it.matches("^[+|-]?[0-9]*[.|,]?[0-9]*(e[+|-][0-9]*)?$".toRegex()) }
}

/**
 * Функція для знаходження слів в рядку.
 * Використовує регулярний вираз "^[+|-]?[0-9]*[.|,]?[0-9]*(e[+|-][0-9]*)?$" для визначення чисел та метод matches()
 * @param str - рядок для аналізу
 * @return список слів, знайдених у рядку
 */
fun findWords(str: String): List<String> {
    return str.split("\\s+".toRegex()).filterNot { it.matches("^[+|-]?[0-9]*[.|,]?[0-9]*(e[+|-][0-9]*)?$".toRegex()) }
}

/**
 * Функція для видалення всіх символів, окрім літер, з рядка.
 * Використовує регулярний вираз "[^A-Za-z]" для визначення літер та метод replace()
 * @param str - рядок для обробки
 * @return рядок лише з літерами
 */
fun replaceNonLetters(str: String) = str.replace("[^A-Za-z]".toRegex(), "")

/**
 * Функція для заміни множинних пробілів на один
 * Використовує регулярний вираз "\\s+" для визначення пробільних символів та метод replace()
 * @param str - рядок для обробки
 * @return рядок без множинних пробілів
 */
fun replaceWhiteSpaces(str: String) = str.replace("\\s+".toRegex(), " ")

/**
 * Функція для перевірки, чи починається слово / рядок з великої літери.
 * Використовує регулярний вираз "^[A-Z].*$" для перевірки та метод matches()
 * @return `true`, якщо рядок починається з великої літери, інакше `false`
 */
fun String.startsWithCapital() = this.matches("^[A-Z].*$".toRegex())